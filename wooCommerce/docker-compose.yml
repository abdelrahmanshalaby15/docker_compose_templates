services:
  # Services line define which Docker images to run. In this case, it will 
#be MySQL server and WordPress image.
  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    ports:
      - "1025:1025"
      - "8025:8025"
  db:
    image: mysql:5.7
    platform: linux/amd64
    # image: mysql:5.7 indicates the MySQL database container image from 
#Docker Hub used in this installation.
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wp
      MYSQL_USER: wp
      MYSQL_PASSWORD: password
    volumes:
     - ./database:/var/lib/mysql
    ports:
      - "3307:3306"
      # Previous four lines define the main variables needed for the MySQL 
#container to work: database, database username, database user password, 
#and the MySQL root password.
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container 
# stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container 
#will use. After successful installation, the full path will look like 
#this: http://localhost:8000
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_NAME: wp
# Similar to MySQL image variables, the last four lines define the main 
#variables needed for the WordPress container to work properly with the 
#MySQL container.
    volumes:
      ["./:/var/www/html"]
volumes:
  mysql: {}

